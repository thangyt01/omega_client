import '../globals.css';

import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import { NextIntlClientProvider, useMessages } from 'next-intl';

import type { ClientSharedServerContext } from '@/@types/server';
import { setClientContext } from '@/client-context';
import { isMobileDevice } from '@/libs/ua-server';

import { Providers } from './providers';

const inter = Inter({ subsets: ['latin'] });

interface RootLayoutProps {
  children: React.ReactNode;
  params: { locale: string };
}

export default function RootLayout({ children, params }: RootLayoutProps) {
  const { locale } = params;
  const { ua, isMobile } = isMobileDevice();
  const messages = useMessages();

  const sharedContext = {
    ua,
    isMobile,
    locale,
  } satisfies ClientSharedServerContext;

  setClientContext(sharedContext);

  return (
    <html lang={locale} className="light">
      <body className={inter.className}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          <Providers>
            {children}
            {/* <AppFrame /> */}
          </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  icons: [
    {
      rel: 'site.webmanifest',
      type: 'application/json',
      url: '/site.webmanifest',
    },
    {
      rel: 'apple-touch-icon',
      url: '/apple-touch-icon.png',
    },
    {
      rel: 'android-chrome-192x192',
      type: 'image/png',
      sizes: '192x192',
      url: '/android-chrome-192x192.png',
    },
    {
      rel: 'android-chrome-512x512',
      type: 'image/png',
      sizes: '512x512',
      url: '/android-chrome-512x512.png',
    },
    {
      rel: 'icon',
      type: 'image/png',
      sizes: '32x32',
      url: '/favicon-32x32.png',
    },
    {
      rel: 'icon',
      type: 'image/png',
      sizes: '16x16',
      url: '/favicon-16x16.png',
    },
    {
      rel: 'icon',
      url: '/favicon.ico',
    },
  ],
};
